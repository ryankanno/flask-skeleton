---
  - name: 'app: create deploy directory'
    file: state=directory path=$flask_skeleton_install_path owner=$ansible_ssh_user group=$ansible_ssh_user

  - name: 'app: create venv directory'
    file: state=directory path=$flask_skeleton_install_path/venv/ owner=$ansible_ssh_user group=$ansible_ssh_user

  - name: 'app: create code directory'
    file: state=directory path=$flask_skeleton_install_path/code/ owner=$ansible_ssh_user group=$ansible_ssh_user

  - name: 'app: create app directory'
    file: state=directory path=$flask_skeleton_install_path/code/flask_skeleton owner=$ansible_ssh_user group=$ansible_ssh_user

  - name: 'app: copy code over'
    local_action: command rsync --recursive -ae "ssh -i $ansible_ssh_private_key_file" $flask_skeleton_src_path/flask_skeleton $ansible_ssh_user_for_local_action@$inventory_hostname:$flask_skeleton_install_path/code/
    sudo: no

  - name: 'app: copy requirements.txt'
    copy: src=$flask_skeleton_src_path/requirements.txt dest=$flask_skeleton_install_path/requirements.txt

  - name: 'app: install pip'
    pip: requirements=$flask_skeleton_install_path/requirements.txt virtualenv=$flask_skeleton_install_path/venv/

  - name: 'app: install nginx uwsgi conf'
    template: src=nginx_uwsgi.conf.j2 dest=/etc/nginx/sites-available/nginx_uwsgi.conf
    notify: restart nginx

  - name: 'web: enable nginx uwsgi conf'
    file: src=/etc/nginx/sites-available/nginx_uwsgi.conf dest=/etc/nginx/sites-enabled/nginx_uwsgi.conf state=link
    notify: restart nginx

  - name: 'web: install uwsgi conf'
    template: src=flask-skeleton.ini.j2 dest=/etc/uwsgi/apps-available/flask-skeleton.ini
    notify: restart uwsgi

  - name: 'web: enable uwsgi conf'
    file: src=/etc/uwsgi/apps-available/flask-skeleton.ini dest=/etc/uwsgi/apps-enabled/flask-skeleton.ini state=link
    notify: restart uwsgi
